<div class="container">
  <div class="mensajes">

  </div>
  <div class="acciones">

  </div>
  <div class="container mt-2 pt-2">
    <div class="autor form-group">
      <input type="text" class="form-control" name="autor" id="autor" placeholder="Escribe tu nombre">
    </div>
    <div class="mensaje form-group">
      <input type="text"  class="form-control" name="mensaje" id="mensaje" placeholder="Escribe tu mensaje">
    </div>
    <button type="button" name="" id="" class="btn btn-primary" btn-lg btn-block" onclick="enviar()">Enviar</button>
  </div>
</div>
<script src="/dependencies/sails.io.js"></script>
<script type="text/javascript">
  // The automatically-created socket is exposed as io.socket.
  // Use .on() to subscribe to the 'user' event on the client.
  // This event is sent by the Sails "create", "update",
  // "delete", "add" and "remove" blueprints to any socket that
  // is subscribed to one or more User model instances.
  //io.sails.url = 'https://localhost:1337';
  io.socket.on('mensaje', function gotHelloMessage (data) {
  console.log('User alert!', data);
});

 // By default: do nothing
 // This is a good place to subscribe a new socket to a room, inform other users 
 // that someone new has come online, or any other custom socket.io logic

 //var io = require('sails.io.js')( require('socket.io-client') );
 
  // Using .get('/user') will retrieve a list of current User models,
  // subscribe this socket to those models, AND subscribe this socket
  // to notifications about new User models when they are created.
  function enviar(){
    var autor=document.getElementById("autor");
    var mensaje=document.getElementById("mensaje");
    console.log("El autor: "+autor.value+" se esta enviando mensajes:"+mensaje.value+" ");
    io.socket.put('/mensaje',{'autor':autor,'mensaje':mensaje}, function (purchases) {
  console.log(purchases);
});
  }
  
  </script>